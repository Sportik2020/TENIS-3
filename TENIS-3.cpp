#include "settings.h"
#include "functions.h"
using namespace sf;
int main()
{
	srand(time(nullptr));
	// ??????, ???????, ??????????, ???????? ??????? ????? ??????????
	RenderWindow window(VideoMode(WINDOW_WIDTH, WINDOW_HEIGHT), WINDOW_TITLE);
	window.setFramerateLimit(FPS);
	//???????? ???????? ????

	//???????
	RectangleShape leftBat, rightBat;
	initBat(leftBat, leftBatColor, leftBatStartPos);
	initBat(rightBat, rightBatColor, rightBatStartPos);
	float leftBatSpeedY = 0.f;
	float rightBatSpeedY = 0.f;
	//?????
	CircleShape ball;
	initBall(ball, ballColor, ballStartPos);

	float arr_speed[]{ -5.f,-4.f,-3.f,-2.f,-1.f,1.f,2.f,3.f,4.f,5.f };
	int index = rand() % 10;
	float ball_speedx = arr_speed[index];
	index = rand() % 10;
	float ball_speedy = arr_speed[index];

	//????
	int leftPlayerScore = 0;
	int rightPlayerScore = 0;

	Font font;
	font.loadFromFile("ds-digib.ttf");
	Text leftPlayerScoreText;
	initText(leftPlayerScoreText, leftPlayerScore, font, charSize, leftTextStartPos);
	Text rightPlayerScoreText;
	initText(rightPlayerScoreText, rightPlayerScore, font, charSize, rightTextStartPos);
	// ??????? ???? ??????????. ???????????, ???? ??????? ????
	while (window.isOpen())
	{
		//1 ???????????? ??????? ??????? ? ?????
		Event event;
		while (window.pollEvent(event))
		{
			// ???????????? ????? ?? ???????? ? ????? ??????? ?????
			if (event.type == Event::Closed)
				// ????? ????????? ???
				window.close();
		}

		//2 ?????????? ????????
		//?????
		//???????? ??????
		ball.move(ball_speedx, ball_speedy);
		//?????-????? ?? ????? 
		if (ball.getPosition().x <= 0)
		{
			//???????? ?? ??? ? ????????? ?? ???????????????
			ball_speedx = -ball_speedx;
			//?????? ????? ????? ???
			rightPlayerScore++;
			rightPlayerScoreText.setString(std::to_string(rightPlayerScore));
		}
		//??? ?????? ???????
		if (ball.getPosition().x >= (WINDOW_WIDTH - 2 * ballRadius))
		{
			//???????? ?? ??? ? ????????? ?? ???????????????
			ball_speedx = -ball_speedx;
			//????? ????? ????? ???
			leftPlayerScore++;
			leftPlayerScoreText.setString(std::to_string(leftPlayerScore));
		}
		if (ball.getPosition().y <= 0 || ball.getPosition().y >=
			(WINDOW_HEIGHT - 2 * ballRadius))
		{
			//???????? ?? ??? y ????????? ?? ???????????????
			ball_speedy = -ball_speedy;
		}

		//???????? ??????? ??????
		//???? ??????? W ?????? - ???? ??????? ????
		if (Keyboard::isKeyPressed(Keyboard::W)) {
			leftBatSpeedY = -batSpeed;
		}
		if (Keyboard::isKeyPressed(Keyboard::S)) {
			leftBatSpeedY = batSpeed;
		}
		if (Keyboard::isKeyPressed(Keyboard::Up)) {
			rightBatSpeedY = -batSpeed;
		}
		if (Keyboard::isKeyPressed(Keyboard::Down)) {
			rightBatSpeedY = batSpeed;
		}
		if (leftBat.getPosition().y <= 0) {
			leftBat.setPosition(batOffset, 0.f);
		}
		if (leftBat.getPosition().y + batHeight >= WINDOW_HEIGHT) {
			leftBat.setPosition(batOffset, WINDOW_HEIGHT - batHeight);
		}
		if (rightBat.getPosition().y <= 0) {
			rightBat.setPosition(WINDOW_WIDTH - batOffset, 0.f);
		}
		if (rightBat.getPosition().y + batHeight >= WINDOW_HEIGHT) {
			rightBat.setPosition(WINDOW_WIDTH - batOffset, WINDOW_HEIGHT - batHeight);
		}
		//??????? ???????  
		leftBat.move(0, leftBatSpeedY);
		rightBat.move(0, rightBatSpeedY);
		//? ????? ???????? ????????
		leftBatSpeedY = 0;
		rightBatSpeedY = 0;
		//3 ????????? ????
		//3.1 ??????? ????
		window.clear(Color::Black);
		//3.2 ????????? ???????? (? ??????!)
		window.draw(leftBat);
		window.draw(rightBat);
		window.draw(ball);
		window.draw(leftPlayerScoreText);
		window.draw(rightPlayerScoreText);
		//3.3 ????? ?? ?????
		window.display();
	}

	return 0;
}
